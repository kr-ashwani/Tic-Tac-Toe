// if nothing is passed as  a parameter of @include display-flex;
// then the default value i.e. row will be the value of $direction
@mixin display-flex($direction: row) {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: $direction;
}
*,
*::before,
*::after {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}
body {
  width: 100vw;
  min-height: 100vh;
  height: 100vh;
  overflow: hidden;
  @include display-flex;
}
.section {
  width: 100%;
  height: 100%;
  @include display-flex(column);
  justify-content: space-around;
}
.gameBoard {
  width: 80%;
  height: 400px;
  background-color: #14bdac;
  @include display-flex;
}
.game-grid {
  width: 350px;
  height: 350px;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(3, 1fr);
  gap: 8px;
  position: relative;
}
.horizontal-line,
.verticle-line {
  width: 100%;
  height: 100%;
  position: absolute;
  z-index: 1;
}
.horizontal-line {
  @include display-flex(column);
  justify-content: space-evenly;
}
.verticle-line {
  @include display-flex;
  justify-content: space-evenly;
}

.v-line1,
.v-line2 {
  width: 8px;
  background-color: #0da192;
  height: 100%;
  transform: scalex(1);
}
.h-line1,
.h-line2 {
  height: 8px;
  background-color: #0da192;
  width: 100%;
  transform: scaley(1);
}

@media screen and(max-width:900px) {
  .gameBoard {
    width: 100%;
  }
}
//main
.boxes {
  z-index: 2;
  position: relative;
}
.score {
  width: 500px; //responsible
  @include display-flex;
  justify-content: space-between;
}

.crossmark {
  margin-left: 50px;
}
.circlemark {
  margin-right: 50px;
}
.crossmark,
.circlemark {
  //responsible
  width: 150px;
  height: 35px;
  user-select: none;
  @include display-flex;
  border-radius: 6px;
  box-shadow: -1.6px -1.6px #d4d0d0, 0px 1.6px #d4d0d0, -1.6px 0px #d4d0d0,
    0px -1.6px #d4d0d0, 0px 1.9px #d4d0d0, 1.6px 0px #d4d0d0;
  transition: 0.2s linear;
  //border: 1.6px solid #d4d0d0;
  justify-content: space-around;
  //box-shadow: 0px 1.8px #14bdac;
}
.shadow {
  box-shadow: -1.6px -1.6px #d4d0d0, 0px 1.6px #14bdac, -1.6px 0px #d4d0d0,
    0px -1.6px #d4d0d0, 0px 1.9px #14bdac, 1.6px 0px #d4d0d0,
    0px 3.6px 10px rgba(#251e1e, 0.4);
}
.crossmark > p:first-child,
.circlemark > P:first-child {
  font-weight: 300;
  font-size: 1.3rem;
  margin-left: -15px;
}
.circlemark > P:first-child {
  font-weight: 100;
  font-size: 2.6rem;
  margin-top: -10px;
}
.crossmark > p:last-child,
.circlemark > P:last-child {
  font-size: 2.3rem;
  color: #757575;
  margin-right: -15px;
  margin-top: -5px;
}

.cross,
.circle {
  width: 100%;
  height: 100%;
  position: absolute;
  @include display-flex;
}
.cross {
  transform: rotate(45deg);
}
.cross::after,
.cross::before {
  content: "";
  width: 60%;
  height: 8px;
  background-color: #545454;
  position: absolute;
  transition: 0.2s ease-in-out;
}
.circle {
}

:root {
  --crossScale: 1;
}
.cross::before {
  transform: rotate(90deg) scaleX(var(--crossScale));
}
.cross::after {
  transform: scaleX(var(--crossScale));
}
.circle::before,
.circle::after {
  position: absolute;
  content: "";
  border-radius: 50%;
  background-color: #f2ebd3;
}
.circle::before {
  width: 40%;
  height: 40%;
  background-color: #14bdac;
  z-index: 3;
}
.circle::after {
  width: 55%;
  height: 55%;
}

.pop-up {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 80%;
  background-color: #251e1e;
  opacity: 0.2;
  z-index: 10;
  transition: 0.3s ease-in-out;
  transform: scale(1);
}
// #pop {
//   transform: scale(1);
// }
